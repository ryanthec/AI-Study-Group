services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: ai-study-group-db
    environment:
      POSTGRES_DB: ai_study_group
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password123}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init:/docker-entrypoint-initdb.d:ro
    networks:
      - ai-study-group-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ai_study_group"]
      interval: 10s
      timeout: 5s
      retries: 5


  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: ai-study-group-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-study-group-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-study-group-backend
    environment:
      - DATABASE_URL=postgresql://postgres:password123@postgres:5432/ai_study_group
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-super-secret-jwt-key-change-in-production}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - ENVIRONMENT=development
      - CORS_ORIGINS=["http://localhost:3000","http://frontend:80"]
      - UPLOAD_DIR=/app/uploads
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ai-study-group-network
    restart: unless-stopped
    env_file:
      - ./backend/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-study-group-frontend
    environment:
      - VITE_API_URL=http://localhost:8000/api/v1
      - VITE_WS_URL=ws://localhost:8000/ws
      - VITE_APP_NAME=AI Study Group
    ports:
      - "3000:5173"
    depends_on:
      - backend
    env_file:
      - ./frontend/.env
    networks:
      - ai-study-group-network
    restart: unless-stopped

  # Nginx (Optional - for production reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: ai-study-group-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - ai-study-group-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  backend_uploads:

networks:
  ai-study-group-network:
    driver: bridge
